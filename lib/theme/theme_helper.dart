import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: colorScheme.primaryContainer.withOpacity(1),
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 30,
        space: 30,
        color: appTheme.blueGray40002,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 18.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 14.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray900,
          fontSize: 12.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: colorScheme.primary,
          fontSize: 40.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        headlineLarge: TextStyle(
          color: colorScheme.primaryContainer.withOpacity(1),
          fontSize: 30.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        headlineMedium: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: 26.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.primaryContainer.withOpacity(1),
          fontSize: 25.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray80002,
          fontSize: 12.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: colorScheme.primaryContainer.withOpacity(1),
          fontSize: 20.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray80002,
          fontSize: 16.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray80002,
          fontSize: 14.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF3580FF),
    primaryContainer: Color(0X9E002055),
    secondaryContainer: Color(0XFF6C757D),

    // Error colors
    errorContainer: Color(0XFF6D6D6D),
    onError: Color(0XFFA4A9B3),

    // On colors(text colors)
    onPrimary: Color(0XFF1C1C1C),
    onPrimaryContainer: Color(0XFFB1B1B1),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber600 => Color(0XFFECB30F);
  Color get amber700 => Color(0XFFDDA300);

  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue100 => Color(0XFFB7D1FC);
  Color get blue10001 => Color(0XFFCADEFF);
  Color get blue10002 => Color(0XFFB4D0FF);
  Color get blue200 => Color(0XFF99BFFF);
  Color get blue300 => Color(0XFF629CFD);
  Color get blue50 => Color(0XFFEAF2FF);
  Color get blue5001 => Color(0XFFE7F0FF);
  Color get blue5002 => Color(0XFFE1ECFF);
  Color get blue5003 => Color(0XFFE8F0FF);
  Color get blue5004 => Color(0XFFE9F1FF);
  Color get blueA20049 => Color(0X493E85FF);

  // BlueB
  Color get blue50B5 => Color(0XB5DFEFFF);

  // BlueAc
  Color get blueA2004c => Color(0X4C4392F9);

  // BlueGray
  Color get blueGray200 => Color(0XFFB6C0C5);
  Color get blueGray400 => Color(0XFF868D95);
  Color get blueGray40001 => Color(0XFF85959E);
  Color get blueGray40002 => Color(0XFF848A94);
  Color get blueGray700 => Color(0XFF525252);
  Color get blueGray900 => Color(0XFF333333);
  Color get blueGray90001 => Color(0XFF263238);
  Color get blueGray90075 => Color(0X750B2C3D);

  // Cyan
  Color get cyan50 => Color(0XFFCAF5FF);

  // DeepPurple
  Color get deepPurple600 => Color(0XFF6621BA);

  // Gray
  Color get gray100 => Color(0XFFF6F6F6);
  Color get gray10001 => Color(0XFFF2F2F2);
  Color get gray200 => Color(0XFFEBEBEB);
  Color get gray300 => Color(0XFFDFDFDF);
  Color get gray30001 => Color(0XFFE6E6E6);
  Color get gray30002 => Color(0XFFE2E2E2);
  Color get gray400 => Color(0XFFB5B5B5);
  Color get gray40001 => Color(0XFFCACACA);
  Color get gray40002 => Color(0XFFC4C4C4);
  Color get gray40003 => Color(0XFFB8B8B8);
  Color get gray40004 => Color(0XFFBBBBBB);
  Color get gray50 => Color(0XFFFBFBFB);
  Color get gray500 => Color(0XFF909090);
  Color get gray50001 => Color(0XFF939393);
  Color get gray5001 => Color(0XFFFAFAFA);
  Color get gray5002 => Color(0XFFF2F7FF);
  Color get gray600 => Color(0XFF797979);
  Color get gray60001 => Color(0XFF7F7F7F);
  Color get gray800 => Color(0XFF3F4343);
  Color get gray80001 => Color(0XFF464646);
  Color get gray80002 => Color(0XFF343A40);
  Color get gray900 => Color(0XFF292929);

  // Grayf
  Color get gray8007f => Color(0X7F3C3C3C);

  // Green
  Color get green400 => Color(0XFF4CD964);
  Color get greenA700 => Color(0XFF07CC66);

  // Orange
  Color get orangeA100 => Color(0XFFFFD970);

  // Pink
  Color get pink100 => Color(0XFFFEB5BD);
  Color get pink300 => Color(0XFFF97189);
  Color get pink50 => Color(0XFFFEDADE);

  // Red
  Color get red300 => Color(0XFFFF7177);
  Color get red500 => Color(0XFFFF3B3B);
  Color get red50001 => Color(0XFFEA4335);
  Color get red50002 => Color(0XFFFF3C3C);
  Color get redA200 => Color(0XFFF73658);

  // Teal
  Color get teal50 => Color(0XFFE2E8EB);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellowA700 => Color(0XFFFFD400);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
